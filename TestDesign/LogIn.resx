<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="minimizeBut.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        1wAADdcBQiibeAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAAYSURBVDhPYxgF
        wwb8JwNAtY6CUQAEDAwAO/4zzXue/wUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="closeBut.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        1wAADdcBQiibeAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAACTSURBVDhP3ZJJ
        CoNAFET7TLpRQRfiLpc0d8vgcIjOq1ARQov22oIHdtWvTyuGiynGOELrYyKyDu4+piIs4AmDrU14N3hr
        xta+GKhggm0Jzyovymwdi8EGZhhA5RVqx3lyWUWRvNKpKOkWL9PYzhOFHh5QQg36eL3jY2kQvmVb8vKW
        aAD+yj/hnS8hzPmRRh+voRA+Ic+0ET5qeU0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="privatePicBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAG
        7AAABuwBHnU4NQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEmSURBVDhPrdG/
        S0JRGMbxO7apNISjEG2R0OLVUAtpkQpqUVxadHBNMP+C6MfY1BZuTS3+GUKjVOIQhKZDRD8huH0ffZ2c
        DvnAB+59z3nPveccby4JgqCGtL26h+YEXrBjJffQ7GOIPSu5h+ZNjHCFNgZGzydYsamzYTCMXWzhA8eI
        IIo0TvGDayxa2yQU1tHFPYrQn+hMOnjAss27tfce4tPmJPTbZeirZ1bXIvoT5chq56ijAvX4Km7gGfso
        oaXJCs9ZvOPQ3lso4ABPSE4nrkJbuMEX/PEA4VmL6HYa+EQTj1izKZNQ0CFe4BuvqGIJC9Ai2s4vLhGy
        ttkwGINO/A5qeoNuZhvad9amuodmnZe2k7eSe2hOoY+cldxDcwbjq/1nPO8P1iqCyDNv+fEAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="UserPctBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEEAAAAPCAYAAAC7paJZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAZRJREFUWEftVjGOhDAM5BtcRUlDhyhoaJCQ6BDaEqj5/wNy49jeM9mgwJV3FCMR
        2+OMZ0OW7Kso3X/HYwLwmABkeTW6ZR1daYI+NneHwr+MxwQgaUJe1K6fN7fvu49pnY1/5NqX2+fRNTPl
        NtdXnZuwR4P4IvX7+nKN1Gu/ZjB58Ka2c73U+f3w3Ic9KuSgd1qPMdv3TKcibYIfiIklRE5tLYLQcOA4
        D7AdOV4Q980LmCBrFVjSMFJPaCD0YKQ3joRbE4Ie0LOv4J30TelUpE2Q/MHdCIdAg/So8yaYPJvAOa1l
        gTLgST/mWRPCHrG+hpPQqetLd0LZ0nHD8RxqzusvHcHUSt7wrbCfmDEhqI/WmOdYPspJ6FRO5gWGJoC8
        yMAW5KAfkkyK5BVRE8I9rNjLJ+GmCQmdCphAJBpOfmW8i7zmAnsP+PcWTUOOryPjZJC7JtD62p1w04SE
        To35jyUSScV8VEAy7vEAfIQW3PhvkbQBhOvxWmhjec9+YwKtr/w73DHhvT7RqXi+GIHHBOAxoSjdN14z
        wDwmii8wAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="PasswordPctBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD8AAAAPCAYAAABTJRdyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAaJJREFUSEvtVr3OgzAM7GvwTYxZuiEGFhYkJDaEOkJn3v8B8vkcHJwQCu1W0cHL
        4Z8723F7+8uNvar9xF/BsrywzfSwpcJuWV7bfp7trI2cmnsY/O32QnwIZvfOjhH27XZaPKwcnn76CCzb
        BzVEtuNp+6r2yTgx+ePbONTW7GDlMFPcWsMRonz0XTDGK6qlMBPXbovAdx46zo1v4Lzhy5v84eTRCBHg
        vlMMSC8+joD7DqJ9VbzEgjoT5Y7q68Zz7YnEySCodoOYpQGckwV2nl+KL2KELzBY8s2P3CkJBME1sZhu
        mvgIQR0XYByzCjMtNoimpDZC19uvjSkuU4Z45XOGr2C7ay8WT8vjTGCNM1VH2xCuZAqDUExNx+saaIif
        KoQkasNkOzbbdJIv7Fj8G52EgZR+1zHG+RCnhK0bEeY8PXkt/g2+h+JhqTek37x/00SKfWlyKYxjmTie
        Vtgk3gjC4qnxIaODZpankuFw6XyJSaf48mH9RDwL0Ndzc+2lGbjsruspTPJhtWMibiPCXwOx42sfij/i
        K36/v7dXtQuLN/Yf0weW+5T3w0UAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAkRAAAJEQAAAAAAAAAA
        AAAAAAAAAAAAANuaNT/bmDTy25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNPXbmDVNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA25g1iNuYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNJwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcmTSJ25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25k0nQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANyZNInbmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmTSdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3Jk0iduYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uZNJ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalzRT25g0/duY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT+25kzZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AfwMAADwAEAAwIB/gADh//gD///8B////h8=
</value>
  </data>
</root>